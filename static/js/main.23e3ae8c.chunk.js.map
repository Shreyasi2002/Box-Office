{"version":3,"sources":["components/styled.js","components/actors/ActorCard.styled.js","components/actors/ActorCard.js","images/not-found.png","components/actors/ActorGrid.js","components/CustomRadio.js","components/Navs.styled.js","components/Navs.js","components/MainPageLayout.js","components/shows/ShowCard.styled.js","components/shows/ShowCard.js","misc/custom-hooks.js","components/shows/ShowGrid.js","misc/config.js","pages/Home.styled.js","components/Title.styled.js","components/Title.js","images/no_results - sad.png","images/welcome.png","pages/Home.js","components/shows/Cast.styled.js","components/shows/Cast.js","components/shows/Details.styled.js","components/shows/Details.js","components/shows/Seasons.styled.js","components/shows/Seasons.js","components/shows/ShowMainData.styled.js","components/shows/ShowMainData.js","pages/Show.styled.js","pages/Show.js","images/nothing added.png","pages/Starred.js","App.styled.js","images/Go back.png","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["FlexGrid","styled","FadeIn","SearchCard","div","Star","props","active","StyledActorCard","ActorCard","image","name","gender","country","birthday","deathday","className","src","alt","ActorGrid","data","map","person","medium","IMAGE_NOT_FOUND","id","RadioWrapper","label","theme","mainColors","blue","CustomRadio","restProps","htmlFor","type","memo","NavList","ul","LinkStyled","Link","gray","LINKS","to","text","Navs","location","useLocation","item","pathname","MainPageLayout","children","StyledShowCard","ShowCard","summary","onStarClick","isStarred","summaryAsText","split","slice","join","replace","onClick","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","ShowGrid","starredShows","dispatchStarred","show","includes","useCallback","API_BASE_URL","apiGet","queryString","a","fetch","then","r","json","response","SearchInput","input","RadioInputsWrapper","SearchButtonWrapper","WelcomeImage","TitleWrapper","dark","Title","title","subtitle","renderResults","results","length","style","display","justifyContent","fontFamily","NO_RESULTS","paddingLeft","Home","useState","sessionStorage","setInput","setPersistedInput","newState","useLastQuery","setResults","searchOption","setSearchOption","isShowSearch","onInputChange","ev","target","value","onSearch","result","onKeyDown","keyCode","OnRadioChange","previousProps","useRef","current","allKeys","Object","keys","changesObj","forEach","from","console","log","useWhyDidYouUpdate","WELCOME","placeholder","onChange","checked","CastList","Cast","cast","character","voice","IMG_PLACEHOLDER","DetailsWrapper","Details","status","premiered","network","SeasonsWrapper","SeasonList","Seasons","seasons","reduce","acc","season","episodeOrder","number","premiereDate","endDate","MainDataWrapper","Headline","TagList","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","ShowPageWrapper","InfoBlock","LoadingAndErrors","isLoading","error","Show","useParams","isMounted","setTimeout","catch","err","message","fontSize","genres","_embedded","Starred","starred","shows","setShows","setIsLoading","setError","promises","Promise","all","apiData","textAlign","NOT_ADDED","NotFound","App","exact","path","GO_BACK","href","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"4PAGaA,EAAWC,YAAOC,IAAPD,CAAH,oGAMRE,EAAaF,IAAOG,IAAV,4fA8BVC,EAAOJ,IAAOG,IAAV,2UAIO,SAAAE,GAAK,OAAKA,EAAMC,OAAS,UAAY,UCxChDC,EAAkBP,YAAOE,EAAPF,CAAH,+H,OCebQ,EAfG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,SAAUC,EAA3C,EAA2CA,SAA3C,OACd,eAACP,EAAD,WACI,qBAAKQ,UAAU,cAAf,SACI,qBAAKC,IAAKP,EAAOQ,IAAI,YAEzB,+BACKP,EADL,IACYC,EAAM,WAAOA,EAAP,KAAmB,QAErC,4BAAIC,EAAO,qBAAiBA,GAAY,qBACvCC,EAAW,sCAASA,KAAgB,KACrC,mBAAGE,UAAU,WAAb,SAAyBD,EAAQ,eAAWA,GAAa,UACzD,2BCdO,MAA0B,sCCsB1BI,EAhBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,cAACpB,EAAD,UACKoB,EAAKC,KAAI,gBAAGC,EAAH,EAAGA,OAAH,OACN,cAAC,EAAD,CAEIR,SAAUQ,EAAOR,SACjBH,KAAMW,EAAOX,KACbD,MAAOY,EAAOZ,MAAQY,EAAOZ,MAAMa,OAASC,EAC5CX,QAASS,EAAOT,QAAUS,EAAOT,QAAQF,KAAO,KAChDI,SAAUO,EAAOP,SACjBH,OAAQU,EAAOV,QANVU,EAAOG,U,4BCPtBC,EAAezB,IAAO0B,MAAV,klCAyBU,qBAAGC,MAAkBC,WAAWC,QAMhC,qBAAGF,MAAkBC,WAAWC,QAmBtC,qBAAGF,MAAkBC,WAAWC,QAIhDC,EAAc,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAUK,EAAb,wBAChB,eAACN,EAAD,CAAcO,QAASD,EAAUP,GAAjC,UACKE,EACD,iDAAWK,GAAX,IAAsBE,KAAK,WAC3B,6BAIOC,iBAAKJ,GC9DPK,EAAUnC,IAAOoC,GAAV,mRAUPC,EAAarC,YAAOsC,IAAPtC,CAAH,ovBAMV,qBAAG2B,MAAkBC,WAAWW,QAE5B,qBAAGZ,MAAkBC,WAAWC,QAQjB,qBAAGF,MAAkBC,WAAWC,QCxB1DW,EAAQ,CACV,CAAEC,GAAI,IAAKC,KAAM,aACjB,CAAED,GAAI,WAAYC,KAAM,iBAGtBC,EAAO,WACT,IAAMC,EAAWC,cAEjB,OACI,gCACI,uBACA,cAACV,EAAD,UACKK,EAAMpB,KAAI,SAAA0B,GAAI,OACX,6BACI,cAACT,EAAD,CACII,GAAIK,EAAKL,GACT1B,UACI+B,EAAKL,KAAOG,EAASG,SAAW,SAAW,GAHnD,SAMKD,EAAKJ,QAPLI,EAAKL,aAgBnBP,iBAAKS,GCxBLK,EAPQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,gCACI,cAAC,EAAD,IACCA,MCHIC,EAAiBlD,YAAOE,EAAPF,CAAH,4uBCErBmD,EAAW,SAAC,GAA0D,IAAxD3B,EAAuD,EAAvDA,GAAIf,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,KAAM0C,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACjDC,EAAgBH,EAAO,UACpBA,EACEI,MAAM,KACNC,MAAM,EAAG,IACTC,KAAK,KACLC,QAAQ,SAAU,IALA,OAMvB,iBAEN,OACI,eAACT,EAAD,WACI,qBAAKnC,UAAU,cAAf,SACI,qBAAKC,IAAKP,EAAOQ,IAAI,WAGzB,6BAAKP,IAEL,4BAAI6C,IAEJ,sBAAKxC,UAAU,OAAf,UACI,cAAC,IAAD,CAAM0B,GAAE,gBAAWjB,GAAnB,uBACA,wBAAQS,KAAK,SAAS2B,QAASP,EAA/B,SACI,cAACjD,EAAD,CAAME,OAAQgD,SAGtB,2BAKGpB,iBAAKiB,G,QCjCpB,SAASU,EAAaC,EAAWC,GAC7B,OAAQA,EAAO9B,MACX,IAAK,MACD,MAAM,GAAN,mBAAW6B,GAAX,CAAsBC,EAAOC,SAEjC,IAAK,SACD,OAAOF,EAAUG,QAAO,SAAAD,GAAM,OAAIA,IAAWD,EAAOC,UAExD,QACI,OAAOF,GAInB,SAASI,EAAoBC,EAASC,EAAcC,GAChD,MAA0BC,qBAAWH,EAASC,GAAc,SAAAG,GACxD,IAAMC,EAAYC,aAAaC,QAAQL,GAEvC,OAAOG,EAAYG,KAAKC,MAAMJ,GAAaD,KAH/C,mBAAOM,EAAP,KAAcC,EAAd,KAUA,OAJAC,qBAAU,WACNN,aAAaO,QAAQX,EAAKM,KAAKM,UAAUJ,MAC1C,CAACA,EAAOR,IAEJ,CAACQ,EAAOC,GAGZ,SAASI,IAAyB,IAAhBb,EAAe,uDAAT,QAC3B,OAAOH,EAAoBL,EAAc,GAAIQ,GCrBjD,I,QA+Bec,EA/BE,SAAC,GAAc,IAAZhE,EAAW,EAAXA,KAChB,EAAwC+D,IAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KAEA,OACI,cAACtF,EAAD,UACKoB,EAAKC,KAAI,YAAe,IAAZkE,EAAW,EAAXA,KACHhC,EAAY8B,EAAaG,SAASD,EAAK9D,IACvC6B,EAAcmC,uBAAY,WAExBH,EADA/B,EACgB,CAAErB,KAAM,SAAU+B,OAAQsB,EAAK9D,IAE/B,CAAES,KAAM,MAAO+B,OAAQsB,EAAK9D,OAEjD,CAAC8B,EAAWgC,EAAK9D,KAEpB,OACI,cAAC,EAAD,CAEIA,GAAI8D,EAAK9D,GACTd,KAAM4E,EAAK5E,KACXD,MAAO6E,EAAK7E,MAAQ6E,EAAK7E,MAAMa,OAASC,EACxC6B,QAASkC,EAAKlC,QACdC,YAAaA,EACbC,UAAWA,GANNgC,EAAK9D,U,2BC1B5BiE,GAAe,yBAEd,SAAeC,GAAtB,mC,gDAAO,WAAsBC,GAAtB,gBAAAC,EAAA,sEACoBC,MAAM,GAAD,OAAIJ,IAAJ,OAAmBE,IAAeG,MAAK,SAAAC,GAAC,OAChEA,EAAEC,UAFH,cACGC,EADH,yBAKIA,GALJ,4C,sBCAA,I,iCAAMC,GAAclG,IAAOmG,MAAV,gaAmBXC,GAAqBpG,IAAOG,IAAV,gJAUlBkG,GAAsBrG,IAAOG,IAAV,maAMJ,qBAAGwB,MAAkBC,WAAWC,QAc/CyE,GAAetG,IAAOG,IAAV,0HCjDZoG,GAAevG,IAAOG,IAAV,w3BAKR,qBAAGwB,MAAkBC,WAAWC,QAoBhC,qBAAGF,MAAkBC,WAAW4E,QCxB3CC,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACV,eAACJ,GAAD,WACI,6BACI,4BAAIG,MAER,4BAAIC,QAIGzE,kBAAKuE,ICZL,OAA0B,6CCA1B,OAA0B,oCCkBnCG,GAAgB,SAAAC,GAClB,OAAIA,GAA8B,IAAnBA,EAAQC,OAEf,gCACI,qBACIC,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,aAJpB,8BASA,qBAAKH,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACI,qBAAKhG,IAAI,gBAAgBD,IAAKmG,OAElC,qBACIJ,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBG,YAAa,OACbF,WAAY,aALpB,qDAcRL,GAAWA,EAAQC,OAAS,EACrBD,EAAQ,GAAGvB,KACd,cAAC,EAAD,CAAUnE,KAAM0F,IAEhB,cAAC,EAAD,CAAW1F,KAAM0F,IAGlB,MAkGIQ,GA/FF,WACT,MR1BG,WAA0C,IAApBhD,EAAmB,uDAAb,YAC/B,EAA0BiD,oBAAS,WAC/B,IAAM9C,EAAY+C,eAAe7C,QAAQL,GAEzC,OAAOG,EAAYG,KAAKC,MAAMJ,GAAa,MAH/C,mBAAO2B,EAAP,KAAcqB,EAAd,KAMMC,EAAoBjC,uBACtB,SAAAkC,GACIF,EAASE,GACTH,eAAevC,QAAQX,EAAKM,KAAKM,UAAUyC,MAE/C,CAACrD,IAGL,MAAO,CAAC8B,EAAOsB,GQWWE,GAA1B,mBAAOxB,EAAP,KAAcqB,EAAd,KACA,EAA8BF,mBAAS,MAAvC,mBAAOT,EAAP,KAAgBe,EAAhB,KACA,EAAwCN,mBAAS,SAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAgC,UAAjBF,EAEfG,EAAgBxC,uBAClB,SAAAyC,GACIT,EAASS,EAAGC,OAAOC,SAEvB,CAACX,IAGCY,EAAW,WAEb1C,GAAO,WAAD,OAAYmC,EAAZ,cAA8B1B,IAASL,MAAK,SAAAuC,GAC9CT,EAAWS,OAIbC,EAAY,SAAAL,GACK,KAAfA,EAAGM,SACHH,KAIFI,EAAgBhD,uBAAY,SAAAyC,GAC9BH,EAAgBG,EAAGC,OAAOC,SAC3B,IAIH,ORxCG,SAA4BzH,EAAML,GAGrC,IAAMoI,EAAgBC,mBACtB3D,qBAAU,WACN,GAAI0D,EAAcE,QAAS,CAEvB,IAAMC,EAAUC,OAAOC,KAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAiBJ,EAAcE,SAAYtI,IAErD0I,EAAa,GAEnBH,EAAQI,SAAQ,SAAA3E,GAERoE,EAAcE,QAAQtE,KAAShE,EAAMgE,KAErC0E,EAAW1E,GAAO,CACd4E,KAAMR,EAAcE,QAAQtE,GAC5B5B,GAAIpC,EAAMgE,QAKlBwE,OAAOC,KAAKC,GAAYjC,QACxBoC,QAAQC,IAAI,uBAAwBzI,EAAMqI,GAIlDN,EAAcE,QAAUtI,KQW5B+I,CAAmB,OAAQ,CAAEpB,gBAAeM,cAGxC,gCACI,gCACI,cAAC,GAAD,CACI5B,MAAM,aACNC,SAAS,6CAEb,sBAAKI,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,UACI,cAACX,GAAD,UACI,qBAAKvF,UAAU,QAAf,SACI,qBAAKC,IAAKqI,GAASpI,IAAI,gBAI/B,eAAC,EAAD,WACI,uBACA,uBAEA,cAACiF,GAAD,CACIjE,KAAK,OACLqH,YAAY,uBACZC,SAAUvB,EACVM,UAAWA,EACXH,MAAOhC,IAEX,eAACC,GAAD,WACI,8BACI,cAAC,EAAD,CACI1E,MAAM,QACNF,GAAG,cACH2G,MAAM,QACNqB,QAASzB,EACTwB,SAAUf,MAIlB,8BACI,cAAC,EAAD,CACI9G,MAAM,SACNF,GAAG,eACH2G,MAAM,SACNqB,SAAUzB,EACVwB,SAAUf,SAKtB,eAACnC,GAAD,WACI,wBAAQpE,KAAK,SAAS2B,QAASwE,EAA/B,oBAGA,uBACA,uBACA,mCAKfxB,GAAcC,OCnJd4C,GAAWzJ,IAAOG,IAAV,6qBC0BNuJ,GAxBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACT,cAACF,GAAD,UACKE,EAAKvI,KAAI,WAA+BiD,GAA/B,IAAGhD,EAAH,EAAGA,OAAQuI,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACN,sBAAe9I,UAAU,YAAzB,UACI,qBAAKA,UAAU,cAAf,SACI,qBACIC,IACIK,EAAOZ,MAAQY,EAAOZ,MAAMa,OAASwI,EAEzC7I,IAAI,kBAGZ,qBAAKF,UAAU,QAAf,SACI,iCACI,sBAAMA,UAAU,OAAhB,SAAwBM,EAAOX,OADnC,KACkD,IAC7CkJ,EAAUlJ,KAFf,IAEsBmJ,EAAQ,UAAY,QAG9C,yBAfMxF,SCLT0F,GAAiB/J,IAAOG,IAAV,mICYZ6J,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,QAAtB,OACZ,eAACJ,GAAD,WACI,yCACY,+BAAOE,OAEnB,2CACeC,EADf,IAC2BC,EAAO,aAASA,EAAQzJ,MAAS,YCPvD0J,GAAiBpK,IAAOG,IAAV,sHAUdkK,GAAarK,IAAOG,IAAV,+dCwBRmK,GAhCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,eAACH,GAAD,WACI,mDACsB,+BAAOG,EAAQzD,YAErC,mDACuB,IACnB,+BACKyD,EAAQC,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAMC,EAAOC,eAAc,QAGpE,cAACN,GAAD,UACKE,EAAQnJ,KAAI,SAAAsJ,GAAM,OACf,sBAAqB3J,UAAU,cAA/B,UACI,sBAAKA,UAAU,OAAf,UACI,wCAAW2J,EAAOE,UAClB,2CACc,+BAAOF,EAAOC,qBAGhC,sBAAK5J,UAAU,QAAf,mBACW,IACP,iCACK2J,EAAOG,aADZ,MAC6BH,EAAOI,gBAVlCJ,EAAOlJ,aCfpBuJ,GAAkB/K,IAAOG,IAAV,uoBAiCf6K,GAAWhL,IAAOG,IAAV,gXAqBR8K,GAAUjL,IAAOG,IAAV,mSCrBL+K,GA7BM,SAAC,GAAD,IAAGxK,EAAH,EAAGA,KAAMyK,EAAT,EAASA,OAAQ/H,EAAjB,EAAiBA,QAASgI,EAA1B,EAA0BA,KAAM3K,EAAhC,EAAgCA,MAAhC,OACjB,eAACsK,GAAD,WACI,qBAAK/J,IAAKP,EAAQA,EAAM4K,SAAWvB,EAAiB7I,IAAI,eACxD,sBAAKF,UAAU,YAAf,UACI,eAACiK,GAAD,WACI,6BAAKtK,IACL,gCACI,cAACN,EAAD,CAAME,QAAM,IAEZ,+BAAO6K,EAAOG,SAAW,cAGjC,qBACIvK,UAAU,UACVwK,wBAAyB,CAAEC,OAAQpI,KAGvC,wCACU,IACN,cAAC6H,GAAD,UACKG,EAAKhK,KAAI,SAACqK,EAAKC,GAAN,OACN,+BAAeD,GAAJC,kBCzBtBC,GAAkB3L,IAAOG,IAAV,gTAgBfyL,GAAY5L,IAAOG,IAAV,qJAST0L,GAAmB7L,IAAOG,IAAV,shBChBvBiE,GAAe,CACjBkB,KAAM,KACNwG,WAAW,EACXC,MAAO,MAGL5H,GAAU,SAACL,EAAWC,GACxB,OAAQA,EAAO9B,MACX,IAAK,gBACD,MAAO,CAAE6J,WAAW,EAAOC,MAAO,KAAMzG,KAAMvB,EAAOuB,MAGzD,IAAK,eACD,OAAO,2BAAKxB,GAAZ,IAAuBgI,WAAW,EAAOC,MAAOhI,EAAOgI,QAE3D,QACI,OAAOjI,IAuFJkI,GAnFF,WACT,IAAQxK,EAAOyK,cAAPzK,GAER,EAA+C8C,qBAC3CH,GACAC,IAFJ,0BAASkB,EAAT,EAASA,KAAMwG,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,MAASjH,EAAnC,KA2BA,OAtBAC,qBAAU,WACN,IAAImH,GAAY,EAgBhB,OAdAxG,GAAO,UAAD,OAAWlE,EAAX,mDACDsE,MAAK,SAAAe,GACFsF,YAAW,WACHD,GACApH,EAAS,CAAE7C,KAAM,gBAAiBqD,KAAMuB,MAE7C,QAENuF,OAAM,SAAAC,GACCH,GACApH,EAAS,CAAE7C,KAAM,eAAgB8J,MAAOM,EAAIC,aAIjD,WACHJ,GAAY,KAEjB,CAAC1K,IAEAsK,EAEI,eAACD,GAAD,WACI,qBAAK9K,UAAU,YACf,6DAKRgL,EAEI,sBACIhF,MAAO,CACHC,QAAS,OACTuF,SAAU,OACVtF,eAAgB,UAJxB,6BAOqB8E,KAKzB,eAACJ,GAAD,WACI,cAAC,GAAD,CACIlL,MAAO6E,EAAK7E,MACZC,KAAM4E,EAAK5E,KACXyK,OAAQ7F,EAAK6F,OACb/H,QAASkC,EAAKlC,QACdgI,KAAM9F,EAAKkH,SAEf,eAACZ,GAAD,WACI,yCACA,cAAC,GAAD,CACI3B,OAAQ3E,EAAK2E,OACbE,QAAS7E,EAAK6E,QACdD,UAAW5E,EAAK4E,eAIxB,eAAC0B,GAAD,WACI,yCACA,cAAC,GAAD,CAASrB,QAASjF,EAAKmH,UAAUlC,aAGrC,eAACqB,GAAD,WACI,sCACA,cAAC,GAAD,CAAMjC,KAAMrE,EAAKmH,UAAU9C,cC5G5B,OAA0B,0CCkBzC,I,GAoFe+C,GApFC,WACZ,MAAkBxH,IAAXyH,EAAP,oBAEA,EAA0BrF,mBAAS,MAAnC,mBAAOsF,EAAP,KAAcC,EAAd,KACA,EAAkCvF,oBAAS,GAA3C,mBAAOwE,EAAP,KAAkBgB,EAAlB,KACA,EAA0BxF,mBAAS,MAAnC,mBAAOyE,EAAP,KAAcgB,EAAd,KAoBA,OAlBAhI,qBAAU,WACN,GAAI4H,GAAWA,EAAQ7F,OAAS,EAAG,CAC/B,IAAMkG,EAAWL,EAAQvL,KAAI,SAAA4C,GAAM,OAAI0B,GAAO,UAAD,OAAW1B,OACxDiJ,QAAQC,IAAIF,GACPlH,MAAK,SAAAqH,GAAO,OAAIA,EAAQ/L,KAAI,SAAAkE,GAAI,MAAK,CAAEA,cACvCQ,MAAK,SAAAe,GACFgG,EAAShG,GACTiG,GAAa,MAEhBV,OAAM,SAAAC,GACHU,EAASV,EAAIC,SACbQ,GAAa,WAGrBA,GAAa,KAElB,CAACH,IAGA,gCACI,cAAC,GAAD,CACIjG,MAAM,aACNC,SAAS,6CAEb,eAAC,EAAD,WACKmF,GACG,eAACD,GAAD,WACI,qBAAK9K,UAAU,YACf,mBACIgG,MAAO,CACHC,QAAS,OACTC,eAAgB,UAHxB,4CAUP8E,GACG,sBAAKhF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,6BACqB8E,MAGvBD,IAAcc,GACZ,gCACI,sBACI7F,MAAO,CACHC,QAAS,OACTC,eAAgB,SAChBC,WAAY,YACZE,YAAa,OACbgG,UAAW,UANnB,gDASuC,uBAEnC,0BAEJ,qBACIrG,MAAO,CACHC,QAAS,OACTC,eAAgB,UAHxB,SAMI,qBAAKhG,IAAI,gBAAgBD,IAAKqM,WAOxCvB,IAAcC,GAASa,GAAS,cAAC,EAAD,CAAUzL,KAAMyL,WC9FrDU,GAAWtN,IAAOG,IAAV,i5CCFN,OAA0B,oCCWnCwB,GAAQ,CACVC,WAAY,CACRC,KAAM,UACNU,KAAM,UACNiE,KAAM,YA4CC+G,OAxCf,WACI,OACI,cAAC,IAAD,CAAe5L,MAAOA,GAAtB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,GAAD,MAGJ,cAAC,IAAD,UACI,eAACH,GAAD,WACI,uCACA,sBAAKvM,UAAU,WAAf,UACI,sDACA,sFAGI,uBAHJ,0DAMA,uBACA,qBAAKE,IAAI,UAAUD,IAAK0M,KACxB,uBACA,uBACA,mBAAGC,KAAK,IAAR,0CCpCtBC,GAAcC,QACa,cAA7BC,OAAOlL,SAASmL,UAEiB,UAA7BD,OAAOlL,SAASmL,UAEhBD,OAAOlL,SAASmL,SAASC,MACrB,2DAsCZ,SAASC,GAAgBC,EAAOC,GAC5BC,UAAUC,cACLC,SAASJ,GACTpI,MAAK,SAAAyI,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiB5J,QACbuJ,UAAUC,cAAcO,YAIxB1F,QAAQC,IACJ,+GAKAgF,GAAUA,EAAOU,UACjBV,EAAOU,SAASN,KAMpBrF,QAAQC,IAAI,sCAGRgF,GAAUA,EAAOW,WACjBX,EAAOW,UAAUP,WAOxCnC,OAAM,SAAAL,GACH7C,QAAQ6C,MAAM,4CAA6CA,MClGvE,IAYegD,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnJ,MAAK,YAAkD,IAA/CoJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACL,cAAC,IAAD,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SFYrB,SAAkBvB,GACrB,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAIuB,IAAIC,cAAwB9B,OAAOlL,SAAS+K,MACpDkC,SAAW/B,OAAOlL,SAASiN,OAIrC,OAGJ/B,OAAOgC,iBAAiB,QAAQ,WAC5B,IAAM5B,EAAK,UAAM0B,cAAN,sBAEPhC,KAgEhB,SAAiCM,EAAOC,GAEpCtI,MAAMqI,EAAO,CACT6B,QAAS,CAAE,iBAAkB,YAE5BjK,MAAK,SAAAG,GAEF,IAAM+J,EAAc/J,EAAS8J,QAAQE,IAAI,gBAEjB,MAApBhK,EAASgE,QACO,MAAf+F,IAC0C,IAAvCA,EAAYE,QAAQ,cAGxB9B,UAAUC,cAAc8B,MAAMrK,MAAK,SAAAyI,GAC/BA,EAAa6B,aAAatK,MAAK,WAC3BgI,OAAOlL,SAASyN,eAKxBpC,GAAgBC,EAAOC,MAG9B/B,OAAM,WACHlD,QAAQC,IACJ,oEAxFAmH,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAMrK,MAAK,WAC/BoD,QAAQC,IACJ,+GAMR8E,GAAgBC,EAAOC,OElCvCoC,GAKAxB,O","file":"static/js/main.23e3ae8c.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport FadeIn from 'react-fade-in/lib/FadeIn';\n\nexport const FlexGrid = styled(FadeIn)`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n`;\n\nexport const SearchCard = styled.div`\n    width: 300px;\n    height: 100%;\n    margin: 0 15px 40px;\n    justify-content: center;\n\n    .img-wrapper {\n        width: 100%;\n        border-radius: 40px;\n        height: 420px;\n        overflow: hidden;\n        border: 1px solid #ddd;\n\n        img {\n            object-fit: cover;\n            height: 100%;\n            width: 100%;\n        }\n    }\n\n    h1 {\n        margin: 10px 0;\n        font-size: 21px;\n    }\n\n    p {\n        margin: 0;\n    }\n`;\n\nexport const Star = styled.div`\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    background-color: ${props => (props.active ? '#ffc806' : '#ddd')};\n    clip-path: polygon(\n        50% 0%,\n        61% 35%,\n        98% 35%,\n        68% 57%,\n        79% 91%,\n        50% 70%,\n        21% 91%,\n        32% 57%,\n        2% 35%,\n        39% 35%\n    );\n`;\n","import styled from 'styled-components';\nimport { SearchCard } from '../styled';\n\nexport const StyledActorCard = styled(SearchCard)`\n    .deathday {\n        margin: 0;\n        margin-top: 15px;\n        font-weight: bold;\n    }\n`;\n","import React from 'react';\nimport { StyledActorCard } from './ActorCard.styled';\n\nconst ActorCard = ({ image, name, gender, country, birthday, deathday }) => (\n    <StyledActorCard>\n        <div className=\"img-wrapper\">\n            <img src={image} alt=\"actor\" />\n        </div>\n        <h1>\n            {name} {gender ? `(${gender})` : null}\n        </h1>\n        <p>{country ? `Comes from ${country}` : 'No country known'}</p>\n        {birthday ? <p>Born {birthday}</p> : null}\n        <p className=\"deathday\">{deathday ? `Died ${deathday}` : 'Alive'}</p>\n        <br />\n    </StyledActorCard>\n);\n\nexport default ActorCard;\n","export default __webpack_public_path__ + \"static/media/not-found.1668c579.png\";","import React from 'react';\nimport ActorCard from './ActorCard';\n\nimport IMAGE_NOT_FOUND from '../../images/not-found.png';\nimport { FlexGrid } from '../styled';\n\nconst ActorGrid = ({ data }) => (\n    <FlexGrid>\n        {data.map(({ person }) => (\n            <ActorCard\n                key={person.id}\n                birthday={person.birthday}\n                name={person.name}\n                image={person.image ? person.image.medium : IMAGE_NOT_FOUND}\n                country={person.country ? person.country.name : null}\n                deathday={person.deathday}\n                gender={person.gender}\n            />\n        ))}\n    </FlexGrid>\n);\n\nexport default ActorGrid;\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\n\nconst RadioWrapper = styled.label`\n    display: block;\n    position: relative;\n    padding-left: 25px;\n    cursor: pointer;\n    font-size: 15px;\n    user-select: none;\n    font-weight: 700;\n    line-height: 1.65;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n        'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n\n    input {\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n    }\n\n    span {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 16px;\n        width: 16px;\n        background-color: #fff;\n        border: 2px solid ${({ theme }) => theme.mainColors.blue};\n        border-radius: 50%;\n    }\n\n    input:checked ~ span {\n        background-color: #fff;\n        border: 2px solid ${({ theme }) => theme.mainColors.blue};\n    }\n\n    span:after {\n        content: '';\n        position: absolute;\n        display: none;\n    }\n\n    input:checked ~ span:after {\n        display: block;\n    }\n\n    span:after {\n        top: 4px;\n        left: 4px;\n        width: 8px;\n        height: 8px;\n        border-radius: 50%;\n        background: ${({ theme }) => theme.mainColors.blue};\n    }\n`;\n\nconst CustomRadio = ({ label, ...restProps }) => (\n    <RadioWrapper htmlFor={restProps.id}>\n        {label}\n        <input {...restProps} type=\"radio\" />\n        <span />\n    </RadioWrapper>\n);\n\nexport default memo(CustomRadio);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const NavList = styled.ul`\n    display: flex;\n    justify-content: center;\n    list-style: none;\n    margin: 0 0 20px;\n    padding: 0;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande',\n        'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n`;\n\nexport const LinkStyled = styled(Link)`\n    margin: 0 5px;\n    padding: 3px 10px;\n    position: relative;\n    text-decoration: navy;\n    text-align: center;\n    color: ${({ theme }) => theme.mainColors.gray};\n    &.active {\n        color: ${({ theme }) => theme.mainColors.blue};\n        &:after {\n            content: '';\n            position: absolute;\n            display: block;\n            height: 2px;\n            left: 0%;\n            bottom: 0;\n            background-color: ${({ theme }) => theme.mainColors.blue};\n            animation: slide-in 0.5s ease-in forwards;\n            @keyframes slide-in {\n                from {\n                    left: 50%;\n                    width: 0;\n                }\n                to {\n                    left: 0%;\n                    width: 100%;\n                }\n            }\n        }\n    }\n`;\n","import React, { memo } from 'react';\nimport { useLocation } from 'react-router';\n\nimport { LinkStyled, NavList } from './Navs.styled';\n\nconst LINKS = [\n    { to: '/', text: 'HOME Page' },\n    { to: '/starred', text: 'Starred Page' },\n];\n\nconst Navs = () => {\n    const location = useLocation();\n\n    return (\n        <div>\n            <br />\n            <NavList>\n                {LINKS.map(item => (\n                    <li key={item.to}>\n                        <LinkStyled\n                            to={item.to}\n                            className={\n                                item.to === location.pathname ? 'active' : ''\n                            }\n                        >\n                            {item.text}\n                        </LinkStyled>\n                    </li>\n                ))}\n            </NavList>\n        </div>\n    );\n};\n\nexport default memo(Navs);\n","import React from 'react';\nimport Navs from './Navs';\n\nconst MainPageLayout = ({ children }) => (\n    <div>\n        <Navs />\n        {children}\n    </div>\n);\n\nexport default MainPageLayout;\n","import styled from 'styled-components';\nimport { SearchCard } from '../styled';\n\nexport const StyledShowCard = styled(SearchCard)`\n    .btns {\n        margin-top: 15px;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        a {\n            text-decoration-color: #000;\n            color: #000;\n            &:hover {\n                text-decoration-color: blue;\n                color: blue;\n            }\n        }\n        button {\n            outline: none;\n            border: 1px solid #8e8e8e;\n            border-radius: 15px;\n            padding: 5px 20px;\n            background-color: #fff;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            &:hover {\n                cursor: pointer;\n            }\n        }\n    }\n`;\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Star } from '../styled';\nimport { StyledShowCard } from './ShowCard.styled';\n\nconst ShowCard = ({ id, image, name, summary, onStarClick, isStarred }) => {\n    const summaryAsText = summary\n        ? `${summary\n              .split(' ')\n              .slice(0, 30)\n              .join(' ')\n              .replace(/<.+?>/g, '')}...`\n        : 'No description';\n\n    return (\n        <StyledShowCard>\n            <div className=\"img-wrapper\">\n                <img src={image} alt=\"show\" />\n            </div>\n\n            <h1>{name}</h1>\n\n            <p>{summaryAsText}</p>\n\n            <div className=\"btns\">\n                <Link to={`/show/${id}`}>Read more</Link>\n                <button type=\"button\" onClick={onStarClick}>\n                    <Star active={isStarred} />\n                </button>\n            </div>\n            <br />\n        </StyledShowCard>\n    );\n};\n\nexport default memo(ShowCard);\n","import { useReducer, useEffect, useState, useRef, useCallback } from 'react';\n\nfunction showsReducer(prevState, action) {\n    switch (action.type) {\n        case 'ADD': {\n            return [...prevState, action.showId];\n        }\n        case 'REMOVE': {\n            return prevState.filter(showId => showId !== action.showId);\n        }\n        default:\n            return prevState;\n    }\n}\n\nfunction usePersistedReducer(reducer, initialState, key) {\n    const [state, dispatch] = useReducer(reducer, initialState, initial => {\n        const persisted = localStorage.getItem(key);\n\n        return persisted ? JSON.parse(persisted) : initial;\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(state));\n    }, [state, key]);\n\n    return [state, dispatch];\n}\n\nexport function useShows(key = 'shows') {\n    return usePersistedReducer(showsReducer, [], key);\n}\n\nexport function useLastQuery(key = 'lastQuery') {\n    const [input, setInput] = useState(() => {\n        const persisted = sessionStorage.getItem(key);\n\n        return persisted ? JSON.parse(persisted) : '';\n    });\n\n    const setPersistedInput = useCallback(\n        newState => {\n            setInput(newState);\n            sessionStorage.setItem(key, JSON.stringify(newState));\n        },\n        [key]\n    );\n\n    return [input, setPersistedInput];\n}\n\nexport function useWhyDidYouUpdate(name, props) {\n    // Get a mutable ref object where we can store props ...\n    // ... for comparison next time this hook runs.\n    const previousProps = useRef();\n    useEffect(() => {\n        if (previousProps.current) {\n            // Get all keys from previous and current props\n            const allKeys = Object.keys({ ...previousProps.current, ...props });\n            // Use this object to keep track of changed props\n            const changesObj = {};\n            // Iterate through keys\n            allKeys.forEach(key => {\n                // If previous is different from current\n                if (previousProps.current[key] !== props[key]) {\n                    // Add to changesObj\n                    changesObj[key] = {\n                        from: previousProps.current[key],\n                        to: props[key],\n                    };\n                }\n            });\n            // If changesObj not empty then output to console\n            if (Object.keys(changesObj).length) {\n                console.log('[why-did-you-update]', name, changesObj);\n            }\n        }\n        // Finally update previousProps with current props for next hook call\n        previousProps.current = props;\n    });\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useCallback } from 'react';\nimport ShowCard from './ShowCard';\n\nimport { FlexGrid } from '../styled';\n\nimport IMAGE_NOT_FOUND from '../../images/not-found.png';\nimport { useShows } from '../../misc/custom-hooks';\n\nconst ShowGrid = ({ data }) => {\n    const [starredShows, dispatchStarred] = useShows();\n\n    return (\n        <FlexGrid>\n            {data.map(({ show }) => {\n                const isStarred = starredShows.includes(show.id);\n                const onStarClick = useCallback(() => {\n                    if (isStarred) {\n                        dispatchStarred({ type: 'REMOVE', showId: show.id });\n                    } else {\n                        dispatchStarred({ type: 'ADD', showId: show.id });\n                    }\n                }, [isStarred, show.id]);\n\n                return (\n                    <ShowCard\n                        key={show.id}\n                        id={show.id}\n                        name={show.name}\n                        image={show.image ? show.image.medium : IMAGE_NOT_FOUND}\n                        summary={show.summary}\n                        onStarClick={onStarClick}\n                        isStarred={isStarred}\n                    />\n                );\n            })}\n        </FlexGrid>\n    );\n};\n\nexport default ShowGrid;\n","const API_BASE_URL = 'https://api.tvmaze.com';\n\nexport async function apiGet(queryString) {\n    const response = await fetch(`${API_BASE_URL}${queryString}`).then(r =>\n        r.json()\n    );\n\n    return response;\n}\n","import styled from 'styled-components';\n\nexport const SearchInput = styled.input`\n    display: block;\n    font-family: 'Roboto', sans-serif;\n    width: 200px;\n    margin: auto;\n    outline: none;\n    padding: 13px 15px;\n    border: 1px solid #dbdbdb;\n    box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\n    font-size: 14px;\n    border-radius: 12px;\n    color: #8d8d8d;\n\n    &::placeholder {\n        font-weight: 300;\n        color: #8d8d8d;\n    }\n`;\n\nexport const RadioInputsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    margin: 20px 0;\n\n    div {\n        margin: 0 15px;\n    }\n`;\n\nexport const SearchButtonWrapper = styled.div`\n    text-align: center;\n    margin-bottom: 35px;\n\n    button {\n        color: #fff;\n        background-color: ${({ theme }) => theme.mainColors.blue};\n        margin: auto;\n        padding: 10px 50px;\n        font-size: 15px;\n        border: none;\n        outline: none;\n        border-radius: 32px;\n        box-shadow: 0px 5px 15px -5px #0046d5;\n        &:hover {\n            cursor: pointer;\n        }\n    }\n`;\n\nexport const WelcomeImage = styled.div`\n    padding: 0 -20px;\n    margin: -45px -75px;\n\n    .image {\n        float: left;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const TitleWrapper = styled.div`\n    text-align: center;\n    margin: 0 0 40px;\n\n    h1 {\n        color: ${({ theme }) => theme.mainColors.blue};\n        letter-spacing: 5px;\n        text-transform: uppercase;\n        margin: 0 0 10px;\n        font-size: 90px;\n        font-weight: 9000;\n        text-shadow: 10px 14px 15px 5px #0046d8;\n        font-family: 'MontSerrat';\n\n        transform: translateX(0%);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        background-size: cover;\n        background-position: center;\n\n        background-clip: text;\n        background-image: url('https://colorlib.com/etc/404/colorlib-error-404-10/img/bg.jpg');\n    }\n\n    p {\n        color: ${({ theme }) => theme.mainColors.dark};\n        margin: 0;\n        font-size: 20px;\n        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\n            'Lucida Sans', Arial, sans-serif;\n    }\n`;\n","import React, { memo } from 'react';\nimport { TitleWrapper } from './Title.styled';\n\nconst Title = ({ title, subtitle }) => (\n    <TitleWrapper>\n        <h1>\n            <b>{title}</b>\n        </h1>\n        <p>{subtitle}</p>\n    </TitleWrapper>\n);\n\nexport default memo(Title);\n","export default __webpack_public_path__ + \"static/media/no_results - sad.d98395d7.png\";","export default __webpack_public_path__ + \"static/media/welcome.6468cbb6.png\";","import React, { useState, useCallback } from 'react';\nimport ActorGrid from '../components/actors/ActorGrid';\nimport CustomRadio from '../components/CustomRadio';\nimport MainPageLayout from '../components/MainPageLayout';\nimport ShowGrid from '../components/shows/ShowGrid';\nimport { apiGet } from '../misc/config';\nimport { useLastQuery, useWhyDidYouUpdate } from '../misc/custom-hooks';\nimport {\n    RadioInputsWrapper,\n    SearchButtonWrapper,\n    SearchInput,\n    WelcomeImage,\n} from './Home.styled';\nimport Title from '../components/Title';\n\nimport NO_RESULTS from '../images/no_results - sad.png';\nimport WELCOME from '../images/welcome.png';\n\nconst renderResults = results => {\n    if (results && results.length === 0) {\n        return (\n            <div>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        fontFamily: 'monospace',\n                    }}\n                >\n                    No Results Found\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <img alt=\"nothing found\" src={NO_RESULTS} />\n                </div>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        paddingLeft: '10px',\n                        fontFamily: 'monospace',\n                    }}\n                >\n                    Dont Be Sad! We will find it! ......\n                </div>\n            </div>\n        );\n    }\n\n    if (results && results.length > 0) {\n        return results[0].show ? (\n            <ShowGrid data={results} />\n        ) : (\n            <ActorGrid data={results} />\n        );\n    }\n    return null;\n};\n\nconst Home = () => {\n    const [input, setInput] = useLastQuery();\n    const [results, setResults] = useState(null);\n    const [searchOption, setSearchOption] = useState('shows');\n\n    const isShowSearch = searchOption === 'shows';\n\n    const onInputChange = useCallback(\n        ev => {\n            setInput(ev.target.value);\n        },\n        [setInput]\n    );\n\n    const onSearch = () => {\n        // Call browser API to fetch remote data\n        apiGet(`/search/${searchOption}?q=${input}`).then(result => {\n            setResults(result);\n        });\n    };\n\n    const onKeyDown = ev => {\n        if (ev.keyCode === 13) {\n            onSearch();\n        }\n    };\n\n    const OnRadioChange = useCallback(ev => {\n        setSearchOption(ev.target.value);\n    }, []);\n\n    useWhyDidYouUpdate('home', { onInputChange, onKeyDown });\n\n    return (\n        <div>\n            <div>\n                <Title\n                    title=\"BOX OFFICE\"\n                    subtitle=\"Are you looking for a movie or an actor?\"\n                />\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <WelcomeImage>\n                        <div className=\"image\">\n                            <img src={WELCOME} alt=\"welcome\" />\n                        </div>\n                    </WelcomeImage>\n\n                    <MainPageLayout>\n                        <br />\n                        <br />\n\n                        <SearchInput\n                            type=\"text\"\n                            placeholder=\"Search for something\"\n                            onChange={onInputChange}\n                            onKeyDown={onKeyDown}\n                            value={input}\n                        />\n                        <RadioInputsWrapper>\n                            <div>\n                                <CustomRadio\n                                    label=\"Shows\"\n                                    id=\"show-search\"\n                                    value=\"shows\"\n                                    checked={isShowSearch}\n                                    onChange={OnRadioChange}\n                                />\n                            </div>\n\n                            <div>\n                                <CustomRadio\n                                    label=\"Actors\"\n                                    id=\"actor-search\"\n                                    value=\"people\"\n                                    checked={!isShowSearch}\n                                    onChange={OnRadioChange}\n                                />\n                            </div>\n                        </RadioInputsWrapper>\n\n                        <SearchButtonWrapper>\n                            <button type=\"button\" onClick={onSearch}>\n                                Search\n                            </button>\n                            <br />\n                            <br />\n                            <br />\n                        </SearchButtonWrapper>\n                    </MainPageLayout>\n                </div>\n            </div>\n            {renderResults(results)}\n        </div>\n    );\n};\nexport default Home;\n","import styled from 'styled-components';\n\nexport const CastList = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n\n    .cast-item {\n        flex: 1 0 50%;\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n\n        @media only screen and (max-width: 768px) {\n            flex: 1 0 100%;\n        }\n    }\n\n    .pic-wrapper {\n        width: 100px;\n        min-width: 100px;\n        height: 100px;\n        overflow: hidden;\n        border-radius: 70%;\n        img {\n            object-fit: cover;\n            width: 100%;\n            height: 100%;\n        }\n    }\n\n    .actor {\n        margin-left: 25px;\n\n        .bold {\n            font-weight: bold;\n        }\n    }\n`;\n","import React from 'react';\nimport IMG_PLACEHOLDER from '../../images/not-found.png';\nimport { CastList } from './Cast.styled';\n\nconst Cast = ({ cast }) => (\n    <CastList>\n        {cast.map(({ person, character, voice }, key) => (\n            <div key={key} className=\"cast-item\">\n                <div className=\"pic-wrapper\">\n                    <img\n                        src={\n                            person.image ? person.image.medium : IMG_PLACEHOLDER\n                        }\n                        alt=\"cast-person\"\n                    />\n                </div>\n                <div className=\"actor\">\n                    <span>\n                        <span className=\"bold\">{person.name}</span> |{' '}\n                        {character.name} {voice ? '| Voice' : ''}\n                    </span>\n                </div>\n                <br />\n            </div>\n        ))}\n    </CastList>\n);\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const DetailsWrapper = styled.div`\n    p {\n        margin: 5px 0;\n\n        span {\n            font-weight: bold;\n        }\n    }\n`;\n","import React from 'react';\nimport { DetailsWrapper } from './Details.styled';\n\nconst Details = ({ status, premiered, network }) => (\n    <DetailsWrapper>\n        <p>\n            Status: <span>{status}</span>\n        </p>\n        <p>\n            Premiered {premiered} {network ? `on ${network.name}` : null}\n        </p>\n    </DetailsWrapper>\n);\n\nexport default Details;\n","import styled from 'styled-components';\n\nexport const SeasonsWrapper = styled.div`\n    p {\n        margin: 5px 0;\n    }\n\n    span {\n        font-weight: 700;\n    }\n`;\n\nexport const SeasonList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    .season-item {\n        display: flex;\n        align-items: center;\n        margin: 10px 0;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n\n        .left {\n            flex: 0 0 30%;\n            border-right: 1px solid #b0b0b0;\n            padding-right: 20px;\n        }\n\n        .right {\n            padding-left: 20px;\n            flex: 1;\n        }\n    }\n`;\n","import React from 'react';\n\nimport { SeasonList, SeasonsWrapper } from './Seasons.styled';\n\nconst Seasons = ({ seasons }) => (\n    <SeasonsWrapper>\n        <p>\n            Seasons in total: <span>{seasons.length}</span>\n        </p>\n        <p>\n            Episodes in total:{' '}\n            <span>\n                {seasons.reduce((acc, season) => acc + season.episodeOrder, 0)}\n            </span>\n        </p>\n        <SeasonList>\n            {seasons.map(season => (\n                <div key={season.id} className=\"season-item\">\n                    <div className=\"left\">\n                        <p>Season {season.number}</p>\n                        <p>\n                            Episodes: <span>{season.episodeOrder}</span>\n                        </p>\n                    </div>\n                    <div className=\"right\">\n                        Aired:{' '}\n                        <span>\n                            {season.premiereDate} - {season.endDate}\n                        </span>\n                    </div>\n                </div>\n            ))}\n        </SeasonList>\n    </SeasonsWrapper>\n);\n\nexport default Seasons;\n","import styled from 'styled-components';\n\nexport const MainDataWrapper = styled.div`\n    display: flex;\n    margin-bottom: 40px;\n\n    img {\n        min-width: 250px;\n        width: 300px;\n        max-height: 450px;\n        border: 1px solid #ddd;\n        border-radius: 40px;\n    }\n\n    .text-side {\n        margin-left: 20px;\n        .summary {\n            color: #5f5f5f;\n            line-height: 1.5;\n        }\n    }\n\n    @media only screen and (max-width: 768px) {\n        flex-wrap: wrap;\n        img {\n            margin-bottom: 20px;\n            margin: auto;\n        }\n        .text-side {\n            margin-left: 0;\n            margin-top: 20px;\n        }\n    }\n`;\n\nexport const Headline = styled.div`\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n\n    h1 {\n        margin: 0;\n        border-right: 1px solid #ddd;\n        padding-right: 25px;\n        margin-right: 20px;\n    }\n\n    div {\n        display: flex;\n        align-items: center;\n        span {\n            margin-left: 10px;\n        }\n    }\n`;\n\nexport const TagList = styled.div`\n    display: inline-flex;\n    flex-wrap: wrap;\n\n    span {\n        margin: 6px;\n        margin-bottom: 0;\n        color: blue;\n        background-color: #d0c9ff;\n        padding: 3px 13px;\n        border-radius: 20px;\n        font-size: 14px;\n    }\n`;\n","import React from 'react';\n\nimport IMG_PLACEHOLDER from '../../images/not-found.png';\nimport { Star } from '../styled';\nimport { Headline, MainDataWrapper, TagList } from './ShowMainData.styled';\n\nconst ShowMainData = ({ name, rating, summary, tags, image }) => (\n    <MainDataWrapper>\n        <img src={image ? image.original : IMG_PLACEHOLDER} alt=\"show-cover\" />\n        <div className=\"text-side\">\n            <Headline>\n                <h1>{name}</h1>\n                <div>\n                    <Star active />\n\n                    <span>{rating.average || 'N/A'}</span>\n                </div>\n            </Headline>\n            <div\n                className=\"summary\"\n                dangerouslySetInnerHTML={{ __html: summary }}\n            />\n\n            <div>\n                Tags:{' '}\n                <TagList>\n                    {tags.map((tag, i) => (\n                        <span key={i}>{tag}</span>\n                    ))}\n                </TagList>\n            </div>\n        </div>\n    </MainDataWrapper>\n);\n\nexport default ShowMainData;\n","import styled from 'styled-components';\n\nexport const ShowPageWrapper = styled.div`\n    padding: 0 20px;\n\n    @media only screen and (min-width: 516px) {\n        padding: 0 40px;\n    }\n\n    @media only screen and (min-width: 768px) {\n        padding: 0 60px;\n    }\n\n    @media only screen and (min-width: 992px) {\n        padding: 0 80px;\n    }\n`;\n\nexport const InfoBlock = styled.div`\n    margin-bottom: 40px;\n    h2 {\n        margin: 0;\n        margin-bottom: 30px;\n        font-size: 22px;\n    }\n`;\n\nexport const LoadingAndErrors = styled.div`\n    h3 {\n        display: flex;\n        justify-content: center;\n    }\n    .loading {\n        display: flex;\n        justify-content: center;\n    }\n    .loading::after {\n        content: '';\n        width: 100px;\n        height: 100px;\n        border: 30px solid #dddddd;\n        border-top-color: blue;\n        border-radius: 50%;\n        animation: loading 1s ease-in infinite;\n    }\n\n    @keyframes loading {\n        to {\n            transform: rotate(1turn);\n        }\n    } ;\n`;\n","import React, { useEffect, useReducer } from 'react';\nimport { useParams } from 'react-router';\nimport Cast from '../components/shows/Cast';\nimport Details from '../components/shows/Details';\n\nimport Seasons from '../components/shows/Seasons';\nimport ShowMainData from '../components/shows/ShowMainData';\n\nimport { apiGet } from '../misc/config';\nimport { InfoBlock, LoadingAndErrors, ShowPageWrapper } from './Show.styled';\n\nconst initialState = {\n    show: null,\n    isLoading: true,\n    error: null,\n};\n\nconst reducer = (prevState, action) => {\n    switch (action.type) {\n        case 'FETCH_SUCCESS': {\n            return { isLoading: false, error: null, show: action.show };\n        }\n\n        case 'FETCH_FAILED': {\n            return { ...prevState, isLoading: false, error: action.error };\n        }\n        default:\n            return prevState;\n    }\n};\n\nconst Show = () => {\n    const { id } = useParams();\n\n    const [{ show, isLoading, error }, dispatch] = useReducer(\n        reducer,\n        initialState\n    );\n\n    useEffect(() => {\n        let isMounted = true;\n\n        apiGet(`/shows/${id}?embed[]=seasons&embed[]=episodes&embed[]=cast`)\n            .then(results => {\n                setTimeout(() => {\n                    if (isMounted) {\n                        dispatch({ type: 'FETCH_SUCCESS', show: results });\n                    }\n                }, 1000);\n            })\n            .catch(err => {\n                if (isMounted) {\n                    dispatch({ type: 'FETCH_FAILED', error: err.message });\n                }\n            });\n\n        return () => {\n            isMounted = false;\n        };\n    }, [id]);\n\n    if (isLoading) {\n        return (\n            <LoadingAndErrors>\n                <div className=\"loading\" />\n                <h3>Data is being loaded ...</h3>\n            </LoadingAndErrors>\n        );\n    }\n\n    if (error) {\n        return (\n            <div\n                style={{\n                    display: 'flex',\n                    fontSize: '18px',\n                    justifyContent: 'center',\n                }}\n            >\n                Error Occured : {error}\n            </div>\n        );\n    }\n    return (\n        <ShowPageWrapper>\n            <ShowMainData\n                image={show.image}\n                name={show.name}\n                rating={show.rating}\n                summary={show.summary}\n                tags={show.genres}\n            />\n            <InfoBlock>\n                <h2>Details</h2>\n                <Details\n                    status={show.status}\n                    network={show.network}\n                    premiered={show.premiered}\n                />\n            </InfoBlock>\n\n            <InfoBlock>\n                <h2>Seasons</h2>\n                <Seasons seasons={show._embedded.seasons} />\n            </InfoBlock>\n\n            <InfoBlock>\n                <h2>Cast</h2>\n                <Cast cast={show._embedded.cast} />\n            </InfoBlock>\n        </ShowPageWrapper>\n    );\n};\n\nexport default Show;\n","export default __webpack_public_path__ + \"static/media/nothing added.2c0d901f.png\";","/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-continue */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect } from 'react';\nimport MainPageLayout from '../components/MainPageLayout';\nimport { useShows } from '../misc/custom-hooks';\nimport { apiGet } from '../misc/config';\nimport ShowGrid from '../components/shows/ShowGrid';\nimport { LoadingAndErrors } from './Show.styled';\n\nimport NOT_ADDED from '../images/nothing added.png';\nimport { init } from '../components/Puzzle';\n\nimport Title from '../components/Title';\n\nconst Starred = () => {\n    const [starred] = useShows();\n\n    const [shows, setShows] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (starred && starred.length > 0) {\n            const promises = starred.map(showId => apiGet(`/shows/${showId}`));\n            Promise.all(promises)\n                .then(apiData => apiData.map(show => ({ show })))\n                .then(results => {\n                    setShows(results);\n                    setIsLoading(false);\n                })\n                .catch(err => {\n                    setError(err.message);\n                    setIsLoading(false);\n                });\n        } else {\n            setIsLoading(false);\n        }\n    }, [starred]);\n\n    return (\n        <div>\n            <Title\n                title=\"BOX OFFICE\"\n                subtitle=\"Are you looking for a movie or an actor?\"\n            />\n            <MainPageLayout>\n                {isLoading && (\n                    <LoadingAndErrors>\n                        <div className=\"loading\" />\n                        <p\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            Shows are still Loading ...\n                        </p>\n                    </LoadingAndErrors>\n                )}\n                {error && (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        Error Occured : {error}\n                    </div>\n                )}\n                {!isLoading && !shows && (\n                    <div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                fontFamily: 'monospace',\n                                paddingLeft: '40px',\n                                textAlign: 'center',\n                            }}\n                        >\n                            Looks like no shows were added ... <br />\n                            {/* Try Out This Puzzle!! */}\n                            <br />\n                        </div>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            <img alt=\"nothing added\" src={NOT_ADDED} />\n                        </div>\n                        {/* <div onLoad={init}>\n                        <canvas id=\"canvas\" />\n                    </div> */}\n                    </div>\n                )}\n                {!isLoading && !error && shows && <ShowGrid data={shows} />}\n            </MainPageLayout>\n        </div>\n    );\n};\n\nexport default Starred;\n","import styled from 'styled-components';\n\nexport const NotFound = styled.div`\n    font-family: 'Montserrat';\n    h1 {\n        font-size: 160px;\n        margin: 10px;\n        font-weight: 900;\n        position: absolute;\n        left: 50%;\n\n        transform: translateX(-50%);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        background-size: cover;\n        background-position: center;\n\n        background-clip: text;\n        background-image: url('https://colorlib.com/etc/404/colorlib-error-404-10/img/bg.jpg');\n    }\n\n    h2 {\n        font-family: sans-serif;\n        color: #000;\n        font-size: 24px;\n        font-weight: 700;\n        text-transform: uppercase;\n        margin-top: 0;\n    }\n\n    a {\n        font-family: 'Montserrat', sans-serif;\n        font-size: 14px;\n        text-decoration: none;\n        text-transform: uppercase;\n        background: #0046d5;\n        display: inline-block;\n        padding: 15px 30px;\n        border-radius: 40px;\n        color: #fff;\n        font-weight: 700;\n        box-shadow: 0px 4px 15px -5px #0046d5;\n        &:hover {\n            cursor: pointer;\n        }\n    }\n    p {\n        font-family: sans-serif;\n        color: #000;\n        font-size: 15px;\n        font-weight: 400;\n        margin-bottom: 20px;\n        margin-top: 0px;\n    }\n\n    .notfound {\n        padding-top: 200px;\n        text-align: center;\n    }\n`;\n","export default __webpack_public_path__ + \"static/media/Go back.afbdbfac.png\";","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport Home from './pages/Home';\nimport Show from './pages/Show';\nimport Starred from './pages/Starred';\nimport { NotFound } from './App.styled';\n\nimport GO_BACK from './images/Go back.png';\n\nconst theme = {\n    mainColors: {\n        blue: '#0047AB',\n        gray: '#c6c6c6',\n        dark: '#353535',\n    },\n};\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n\n                <Route exact path=\"/starred\">\n                    <Starred />\n                </Route>\n\n                <Route exact path=\"/show/:id\">\n                    <Show />\n                </Route>\n\n                <Route>\n                    <NotFound>\n                        <h1>Oops!</h1>\n                        <div className=\"notfound\">\n                            <h2>404 - Page not found</h2>\n                            <p>\n                                The page you are looking for might have been\n                                removed,\n                                <br /> had its name changed or is temporarily\n                                unavailable.\n                            </p>\n                            <br />\n                            <img alt=\"go back\" src={GO_BACK} />\n                            <br />\n                            <br />\n                            <a href=\".\">GO TO HOMEPAGE</a>\n                        </div>\n                    </NotFound>\n                </Route>\n            </Switch>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}